{"ast":null,"code":"var _jsxFileName = \"/Users/arvind/Arv/rvCode/ReactJs/react-work/src/ConditionalOperators.js\";\nimport React, { Component } from 'react';\n\nclass ConditionalOperation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recession: false,\n      car1: 'jaguar',\n      car2: 'porshe'\n    };\n  }\n\n  render() {\n    {\n      /* Approach #3 Element Variables\n      \n      let carSelection;\n      if (this.state.recession) {\n      carSelection = <div>I will buy {this.state.car1}</div>\n      } else {\n      carSelection = <div>I will buy {this.state.car1} and {this.state.car2}</div>\n      } \n      \n      return carSelection;\n      */\n    } // Approach #4 Shock circuit operator \n    // return this.state.recession && <div>I will buy {this.state.car1}</div>;\n\n    console.log(this.state.recession); // Approach #2 preferered**  ternary conditional statement\n\n    return this.state.recession ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 35\n      }\n    }, \"I will buy \", this.state.car1) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, \" I will buy \", this.state.car1, \" and \", this.state.car2);\n    {\n      /*  Approach #1 General If and else statement\n      \n      if (this.state.recession == true) {\n      return <div>I will buy {this.state.car1}</div>\n      }\n      else {\n      return <div> I will buy {this.car1} and {this.state.car2}</div>\n      } */\n    }\n  }\n\n}\n\nexport default ConditionalOperation;","map":{"version":3,"sources":["/Users/arvind/Arv/rvCode/ReactJs/react-work/src/ConditionalOperators.js"],"names":["React","Component","ConditionalOperation","constructor","state","recession","car1","car2","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,oBAAN,SAAmCD,SAAnC,CAA6C;AAE5CE,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,KADC;AAEZC,MAAAA,IAAI,EAAE,QAFM;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAb;AAKA;;AAIDC,EAAAA,MAAM,GAAG;AAER;AAAC;;;;;;;;;;;AAUE,KAZK,CAcR;AACA;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,SAAvB,EAjBQ,CAmBR;;AACC,WAAO,KAAKD,KAAL,CAAWC,SAAX,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiB,KAAKD,KAAL,CAAWE,IAA5B,CAAxB,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkB,KAAKF,KAAL,CAAWE,IAA7B,WAAwC,KAAKF,KAAL,CAAWG,IAAnD,CADD;AAID;AAAC;;;;;;;;AAOI;AACL;;AA7C2C;;AAiD7C,eAAeL,oBAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass ConditionalOperation extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\trecession: false,\n\t\t\tcar1: 'jaguar',\n\t\t\tcar2: 'porshe',\n\t\t}\n\t}\n\n\n\n\trender() {\n\n\t\t{/* Approach #3 Element Variables\n\t\t\t\n\t\t\tlet carSelection;\n\t\tif (this.state.recession) {\n\t\t\tcarSelection = <div>I will buy {this.state.car1}</div>\n\t\t} else {\n\t\t\tcarSelection = <div>I will buy {this.state.car1} and {this.state.car2}</div>\n\t\t} \n\t\t\t\n\t\t\treturn carSelection;\n\t\t*/}\n\n\t\t// Approach #4 Shock circuit operator \n\t\t// return this.state.recession && <div>I will buy {this.state.car1}</div>;\n\n\t\tconsole.log(this.state.recession);\n\n\t\t// Approach #2 preferered**  ternary conditional statement\n\t\t\treturn this.state.recession ? (<div>I will buy {this.state.car1}</div>) :\n\t\t\t(<div> I will buy {this.state.car1} and {this.state.car2}</div>); \n\n\n\t\t{/*  Approach #1 General If and else statement\n\t\t\t\n\t\t\tif (this.state.recession == true) {\n\t\t\treturn <div>I will buy {this.state.car1}</div>\n\t\t}\n\t\telse {\n\t\t\treturn <div> I will buy {this.car1} and {this.state.car2}</div>\n\t\t} */}\n\t}\n\n}\n\nexport default ConditionalOperation;"]},"metadata":{},"sourceType":"module"}